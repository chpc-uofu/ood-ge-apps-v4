#!/usr/bin/env bash
set -x
<%
# Determine the application root from session token.
app_root = BatchConnect::App.from_token(session.token).root.realpath

# Set our working directory.
#working_dir = Pathname.new(context.working_dir)

# Ensure that code-server always starts up in either a user defined directory or the home directory.
#if ! working_dir.exist?
    working_dir = Pathname.new(ENV['HOME'])
#elsif working_dir.file?
#    working_dir = working_dir.parent
#end
%>

# Setup environment.
APP_ROOT="<%= app_root.to_s %>"
CODE_SERVER_DATAROOT="$HOME/.local/share/codeserver-ood"

# Path to Code Server binary. /code-server/ is expected to be a symlink to #{CODE_SERVER_FOLDER}/bin/code-server
#
# ln -s code-server-3.3.1-linux-x86_64 code-server
#CODE_SERVER="${CODE_SERVER:-${APP_ROOT}/code-server/bin/code-server}"
CODE_SERVER="/uufs/chpc.utah.edu/sys/installdir/codeserver/3.5.0/code-server"

# Ensure a dataroot for Code Server.
mkdir -p "$CODE_SERVER_DATAROOT/extensions"

# Expose the password to the server.
export PASSWORD="$password"

# Print compute node.
echo "$(date): Running on compute node ${compute_node}:$port"

<%- if context.additional_environment != "" -%>
  <%= context.additional_environment.gsub /\r\n?/, "\n" %>
<%- end -%>

echo ""

#
# Start Code Server.
#
echo "$(date): Started code-server"
echo ""

$CODE_SERVER \
    --auth="password" \
    --bind-addr="0.0.0.0:${port}" \
    --disable-telemetry \
    --extra-extensions-dir="$CODE_SERVER_DATAROOT/extensions" \
    --user-data-dir="$CODE_SERVER_DATAROOT" \
    --log debug \
    "<%= working_dir.to_s %>"

